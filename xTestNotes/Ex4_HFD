from ySourceProg import *

allumage()

# calcule à partir de quelle note jouer, si l'utilisateur ne veut que des notes hautes
  
# Déclaration des pins du MCP pour relier le programme aux sorties physiques du MCP vers les électro-aimants
mcp = []
mcp.append(MCP23S17(ce=0x00, deviceID=0x00)) # chip A (ce =0x00 pour ce=0x01 si on change de chip sur les cartes de 128GPIO)
mcp.append(MCP23S17(ce=0x00, deviceID=0x01)) # chip B ()
mcp.append(MCP23S17(ce=0x00, deviceID=0x02)) # chip C
mcp.append(MCP23S17(ce=0x00, deviceID=0x03)) # chip D
mcp.append(MCP23S17(ce=0x00, deviceID=0x04)) # chip E
mcp.append(MCP23S17(ce=0x00, deviceID=0x05)) # chip F
mcp.append(MCP23S17(ce=0x00, deviceID=0x06)) # chip G
mcp.append(MCP23S17(ce=0x00, deviceID=0x07)) # chip H

N = len(mcp)

for I in range(N):
    mcp[I].open()
    for x in range(16):
        # génère les sorties (x = n° de touche, mcp[I] = octave)
        mcp[I].setDirection(x, mcp[I].DIR_OUTPUT)
                

note = int(input('quelle note ? \n>'))
acore = int(input("quel temps doit étre jouer ? \n 1) Mageur / 2) Mineur\n>"))
            
try :
    if note <= 73 :
        for j in range(4):
            if j == 0:
                a = note
            elif j == 1:
                if acore == 1:
                    a = note + 4
                elif acore == 2:
                    a = note + 3
            elif j == 2:
                a = note + 7
            elif j == 3:
                a = note + 12
            
            if a < 16:
                I = 0
                b = a%16
            elif a < 32:
                I = 1
                b = a%16
            elif a < 48:
                I = 2
                b = a%16
            elif a < 64:
                I = 3
                b = a%16
            elif a < 80:
                I = 4
                b = a%16
            
            mcp[I].digitalWrite(b, MCP23S17.LEVEL_HIGH)
            sleep(0.5)
            mcp[I].digitalWrite(b, MCP23S17.LEVEL_LOW)
            print('n° note',a,'\nn° note dans MCP',b,'\nn° MCP',I,'\nNb note',j)
    elif note > 73:
        print('note trop haute')
except :
    print('Erreur')
            
                
            
        
        



                
# active la note
# mcp[I].digitalWrite(x, MCP23S17.LEVEL_HIGH)
# laisse la note jouer (si rythme < ~0.05, n'a pas le temps de jouer correctement)
# sleep(0.5)
# désactive la note
# mcp[I].digitalWrite(x, MCP23S17.LEVEL_LOW)







arret()